#!/usr/bin/env bash
set -euo pipefail

# Default location of env file.
SSH_AGENT_CANON_DEFAULT_ENV_FILE="${XDG_RUNTIME_DIR:-"/tmp/user/$(id -u)"}/ssh-agent-canonicalize/env.source"

ENV_FILE="${SSH_AGENT_CANON_ENV_FILE:-"$SSH_AGENT_CANON_DEFAULT_ENV_FILE"}"
SSH_CONFIG_DIR="$HOME/.ssh"
DEFAULT_KEYS_FILE="$SSH_CONFIG_DIR/.ssh-agent-default-keys"

function canon_agent_pid() {
  # Contain changes to shell state in a subshell.
  (
    unset SSH_AGENT_PID SSH_AUTH_SOCK
    source "$ENV_FILE" >/dev/null
    # If the auth socket file is gone then the agent is unreachable. Even if it
    # was canonical at some point, there's no reason to keep it around any more.
    if [[ -S "${SSH_AUTH_SOCK:-}" ]]; then
      echo ${SSH_AGENT_PID:-}
    fi
  )
}

function non_canon_agent_pids() {
  echo $(pgrep ssh-agent | grep -Ev "^$(canon_agent_pid)$")
}

function is_canon_agent_running() {
  ps -p "$(canon_agent_pid)" 2>/dev/null | grep -q ssh-agent
}

function kill_non_canon_agents() {
  non_canon_agent_pids | xargs -r kill -TERM
}

function default_key_names() {
  if [ -f "$DEFAULT_KEYS_FILE" ]; then
    cat "$DEFAULT_KEYS_FILE" | awk -v SSH="$SSH_CONFIG_DIR" '{print SSH "/" $0}'
  fi
}


function seed_agent() {
  # Contain changes to shell state in a subshell.
  (
    source "$ENV_FILE" >/dev/null
    if ! ssh-add -l 2>&1 >/dev/null; then
      if ! ssh-add $(default_key_names); then
        echo "Failed to add default SSH keys to agent! Create keys with a standard name ($SSH_CONFIG_DIR/id_<algorithm>), or populate the default-keys file ($DEFAULT_KEYS_FILE) with relative paths to custom keys." >&2
        exit 1
      fi
    fi
  )
}

function canonicalize_ssh_agent() {
  # Ensure that we can create the env file before modifying any system state.
  mkdir -p "$(dirname "$ENV_FILE")"
  touch "$ENV_FILE"

  # Ensure that only the canonical instance of ssh-agent is running.
  kill_non_canon_agents
  if ! is_canon_agent_running; then
    ssh-agent >"$ENV_FILE"
  fi

  # Add default keys to the canonical instance of ssh-agent.
  seed_agent
}

function main() {
  # Redirect any output to stderr so stdout can always be safely eval'd.
  if ! canonicalize_ssh_agent >&2; then
    echo ssh-agent-canonicalize failed! >&2
    exit 1
  fi

  # Write the canonical agent configuration to stdout.
  cat "$ENV_FILE"
}

main
